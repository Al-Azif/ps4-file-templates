//------------------------------------------------
//--- 010 Editor v11.0.1 Binary Template
//
//      File: npbind.dat
//   Authors: Al Azif
//   Version: 1.0.3
//   Purpose: To parse npbind.dat files from the Sony PlayStation® 4
//  Category: Game
// File Mask: npbind.dat
//  ID Bytes: D2 94 A0 18
//   History:
//   1.0.4   Fix one more type and add metadata
//   1.0.3   Make types more inline with what's actually used
//   1.0.2   Fix alignment that 1.0.1 broke
//   1.0.1   Fix missing section
//   1.0.0   Initial release
//------------------------------------------------
BigEndian();

typedef struct npbind_header {
  uint32 magic <bgcolor=cAqua,format=hex>; // "Ò” " (0xD294A018)
  uint32 version <bgcolor=cBlue>;
  uint64 file_size <bgcolor=cPurple>;
  uint64 entry_size <bgcolor=cGray>;
  uint64 num_entries <bgcolor=cWhite>;
  char padding[96] <bgcolor=cYellow>;
};

typedef struct npbind_entry {
  uint16 type <bgcolor=cWhite>;
  uint16 size <bgcolor=cGray>; // Size of `data` including padding
  if (type == 0x0010) {
    // NPCommID: 12 Bytes (No null terminator)
    char data[size] <bgcolor=cGreen>;
  } else if (type == 0x0011) {
    // Trophy number: 1 Byte + 11 Bytes of Padding
    char uint8 <bgcolor=cGreen>;
    char padding[11] <bgcolor=cYellow>;
    // Unk Data 1: 176 Bytes
  } else if (type == 0x0012) {
    char data[size] <bgcolor=cRed>;
  } else if (type == 0x0013) {
    // Unk Data 2: 16 Bytes
    char data[size] <bgcolor=cRed>;
  }
};

typedef struct npbind_body {
  struct npbind_entry npcommid_name;
  struct npbind_entry tophy_number;
  struct npbind_entry unk1;
  struct npbind_entry unk2;
  char padding[152] <bgcolor=cYellow>;
};

struct FILE {
  npbind_header header;
  npbind_body body [ header.num_entries ];
  char digest[20] <bgcolor=cPurple>; // SHA1 of file without this section
} file;
